---
# defaults file for boss-ansible-core

# Dictionary of custom facts that are set globally on all hosts.
boss__core__facts: {}

# Dictionary of custom facts that are set in a group of hosts.
boss__core__group_facts: {}

# Dictionary of custom facts that are set on specific hosts.
boss__core__host_facts: {}

# List of custom fact keys which will be removed if found.
boss__core__remove_facts: []

# If ``True``, Ansible will not add facts that are already present on a host to
# the dictionary, and only store those specified in inventory.
boss__core__reset_facts: False

# Global list of tags to set on all hosts.
boss__core__tags: []

# List of tags to set for a group of hosts.
boss__core__group_tags: []

# List of tags to set on a given host.
boss__core__host_tags: []

# Override any combination of global, group or host tags with a static set.
boss__core__static_tags: []

# Specify a list of tags to remove from a tag list, if they're present.
boss__core__remove_tags: []

# If ``True``, Ansible will not merge current set of tags on a host and will
# create a new list of tags from inventory variables.
boss__core__reset_tags: False

# List of IP addresses or CIDR subnets which contain hosts that are used to
# execute Ansible playbooks. Other roles that maintain host security can source
# the ``ansible_local.core.ansible_controllers`` list and add the entries found
# there to IP address whitelist.
boss__core__ansible_controllers: []

# IP address from which the SSH connection to a given host originates. It
# usually is the external IP address of Ansible Controller host, but it might be
# an internal IP address of a gateway or SSH jumphost through which the
# connection is proxied. This IP address will be added to list of Ansible
# Controllers defined above.
boss__core__active_controller: '{{ ((ansible_env.SSH_CLIENT.split(" ") | first)
                              if (ansible_env|d() and ansible_env.SSH_CLIENT|d())
                              else "") }}'


# List of the system groups which contain the system administrator accounts.
# If you don't want this functionality, make this list empty.
boss__core__admin_groups: [ 'admins' ]

# List of system administrator accounts. Ansible will check what accounts are
# in the groups specified above and include them in this list automatically.
# These accounts are used in different roles to automatically create
# administrative accounts in different services.
#
# To override the admin accounts autodetected by Ansible, specify them in this
# list.
boss__core__admin_users: '{{ (ansible_user
                        if ansible_user|d()
                        else (ansible_ssh_user
                              if ansible_ssh_user|d()
                              else lookup("env", "USER"))) }}'

# List of user accounts which will not be included by Ansible in the system
# administrator account list. This is used to avoid creating common, static
# admin account names in various services.
boss__core__admin_blacklist_default_users:
  - 'admin'
  - 'ansible'
  - 'debian'
  - 'root'
  - 'ubuntu'
  - 'user'

# Additional list of user accounts to not include in the system administrator
# account list.
boss__core__admin_blacklist_users: []

# List of public system administrator e-mail addresses. The addresses specified
# here will be used as publicly visible admin contact information by the
# Ansible roles that use them.
#
# This variable can be used as a final destination by the system MTA.
boss__core__admin_public_email: [ 'root@{{ boss__core__domain }}' ]

# List of private system administrator e-mail addresses. They will be used by
# other Ansible roles to sent important system messages to the administrator.
# These e-mail addresses are visible to all users on a given host, but should
# not be visible from outside of a host.
#
# If none are specified, list of admin user accounts will be used instead. The
# mail delivery to these accounts is left to the system MTA.
#
# This variable shouldn't be used as a final destination by the system MTA,
# otherwise it might result in an undeliverable error. It can be used as an
# alias.
boss__core__admin_private_email: []

# Time in seconds which specifies how long APT cache should be considered
# valid between updates.
boss__core__cache_valid_time: '{{ (60 * 60 * 24) }}'

# Some of the OS distributions are not detected by Ansible correctly. This
# variable can be used to fix that issue across all roles that use it.
boss__core__distribution: '{{ ansible_lsb.id
                        if (ansible_lsb|d() and ansible_lsb.id|d())
                        else ansible_distribution }}'

# Some of the OS releases are not detected by Ansible correctly. This variable
# can be used to fix that issue across all roles that use it.
boss__core__distribution_release: '{{ ansible_lsb.codename
                                if (ansible_lsb|d() and ansible_lsb.codename|d())
                                else ansible_distribution_release }}'

# The default host domain which can be used by the other roles to configure
# network services.
boss__core__domain: '{{ ansible_domain if ansible_domain else ansible_hostname }}'

# The default Fully Qualified Domain Name of the host which can be used by the
# other roles to configure network services.
boss__core__fqdn: '{{ ansible_fqdn }}'

# URL for the GnuPG keyserver on which Ansible will search for encryption keys.
boss__core__keyserver: 'hkp://pool.sks-keyservers.net'

# Ansible will try and read the UUID value from the host using ``dmidecode``.
# If it's not available, this value will be used as the UUID source.
boss__core__uuid_random: '{{ ansible_fqdn | to_uuid }}'

# Default umask for home directories.
boss__core__homedir_umask: '0027'

# Enable or disable use of the ``unsafe_writes`` parameter in Ansible tasks
# that deal with files. See :ref:`boss__core__ref_unsafe_writes` for more details.
boss__core__unsafe_writes: False

# List of packages required by Ansible local fact scripts.
boss__core__base_packages: [ 'libcap2-bin' ]

# List of additional packages to install.
boss__core__packages: []

# List of additional packages to install for a group.
boss__core__group_packages: []

# List of additional packages to install for a host.
boss__core__host_packages: []

# Path where Ansible local facts are stored. This shouldn't really be changed
# because many Ansible roles use this path explicitly. This variable is set here
# so that it can be used by the directory creation task to ensure that the
# ``facts.d`` directory is present.
boss__core__root_facts: '/etc/ansible/facts.d'

# Directory where user binaries accessible via ``$PATH`` should be stored.
boss__core__root_bin: '/usr/local/bin'

# Directory where additional configuration files not related to existing
# services will be stored. Very rarely used.
boss__core__root_etc: '/usr/local/etc'

# Directory where various scripts which don't or shouldn't be directly
# accessible from the interactive shell should be stored, so that they don't
# pollute Tab-completion. Roles can create subdirectories here in case when
# more than a handful of scripts are used.
boss__core__root_lib: '/usr/local/lib'

# Directory where administrator binaries accessible via ``$PATH`` should be
# stored.
boss__core__root_sbin: '/usr/local/sbin'

# Path where static data files should be stored, similar to :file:`/usr/share`.
# Rarely used.
boss__core__root_share: '/usr/local/share'

# Path where application sources (tarballs, :command:`git` repositories) can be stored
# and operated on, usually in a separate subdirectory for each role or user.
boss__core__root_src: '/usr/local/src'

# Directory that stores application data, things served by a given host, for
# example webpages. Web application system accounts may have their home
# directories there, as well as ``sftpusers`` websites and home directories.
boss__core__root_data: '/srv'

# Alternative directory for application data.
boss__core__root_srv: '/srv'

# Path where local backups generated by automated scripts are stored, usually
# in separate subdirectories for each user/role.
boss__core__root_backup: '/var/backups'

# Path where variable internal data are stored. Examples include databases,
# spools, transient files. Usually a separate subdirectory is used, especially
# when the application has its own home directory.
boss__core__root_var: '/var/local'

# Path where home directories of local system accounts are stored (:file:`/home` is
# reserved for regular users and home directories of users stored in remote
# databases like LDAP).
boss__core__root_home: '/var/local'

# Directory where non-web applications are installed. By default it's in
# a subdirectory, usually home directory of an application, but the root path
# might be different.
boss__core__root_app: '/var/local'

# Path where cache files are stored, optionally with a separate subdirectory.
boss__core__root_cache: '/var/cache'

# Path where log files are stored, optionally with a separate subdirectory.
boss__core__root_log: '/var/log'

# Path where spool files are stored, optionally with a separate subdirectory.
boss__core__root_spool: '/var/spool'

# List of directories and their ``ansible_local.root.*`` variable names, passed
# to a task that creates them in the filesystem and the template that generates
# Ansible local facts.
boss__core__root_directories:

  - path: '{{ boss__core__root_facts }}'
    fact: 'facts'

  - path: '{{ boss__core__root_bin }}'
    fact: 'bin'

  - path: '{{ boss__core__root_etc }}'
    fact: 'etc'

  - path: '{{ boss__core__root_lib }}'
    fact: 'lib'

  - path: '{{ boss__core__root_sbin }}'
    fact: 'sbin'

  - path: '{{ boss__core__root_share }}'
    fact: 'share'

  - path: '{{ boss__core__root_src }}'
    fact: 'src'

  - path: '{{ boss__core__root_data }}'
    fact: 'data'

  - path: '{{ boss__core__root_srv }}'
    fact: 'srv'

  - path: '{{ boss__core__root_backup }}'
    fact: 'backup'

  - path: '{{ boss__core__root_home }}'
    fact: 'home'

  - path: '{{ boss__core__root_app }}'
    fact: 'app'

  - path: '{{ boss__core__root_var }}'
    fact: 'var'

  - path: '{{ boss__core__root_cache }}'
    fact: 'cache'

  - path: '{{ boss__core__root_log }}'
    fact: 'log'

  - path: '{{ boss__core__root_spool }}'
    fact: 'spool'
